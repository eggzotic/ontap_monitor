//
// Richard Shepherd, 2020
//  eggzotic@gmail.com, richard.shepherd3@netapp.com
//
enum ApiOntapSvmLanguage {
  c,
  da,
  de,
  en,
  en_us,
  es,
  fi,
  fr,
  he,
  it,
  ja,
  ja_jpDoTpck,
  ko,
  no,
  nl,
  pt,
  sv,
  zh,
  zhDoTgbk,
  zh_tw,
  zh_twDoTbig5,
  cDoTutf_8,
  ar,
  arDoTutf_8,
  cs,
  csDoTutf_8,
  daDoTutf_8,
  deDoTutf_8,
  enDoTutf_8,
  en_usDoTutf_8,
  esDoTutf_8,
  fiDoTutf_8,
  frDoTutf_8,
  heDoTutf_8,
  hr,
  hrDoTutf_8,
  hu,
  huDoTutf_8,
  itDoTutf_8,
  jaDoTutf_8,
  ja_v1,
  ja_v1DoTutf_8,
  ja_jpDoTpckDoTutf_8,
  ja_jpDoT932,
  ja_jpDoT932DoTutf_8,
  ja_jpDoTpck_v2,
  ja_jpDoTpck_v2DoTutf_8,
  koDoTutf_8,
  noDoTutf_8,
  nlDoTutf_8,
  pl,
  plDoTutf_8,
  ptDoTutf_8,
  ro,
  roDoTutf_8,
  ru,
  ruDoTutf_8,
  sk,
  skDoTutf_8,
  sl,
  slDoTutf_8,
  svDoTutf_8,
  tr,
  trDoTutf_8,
  zhDoTutf_8,
  zhDoTgbkDoTutf_8,
  zh_twDoTutf_8,
  zh_twDoTbig5DoTutf_8,
  utf8mb4,
}

//
extension ApiOntapSvmLanguageMembers on ApiOntapSvmLanguage {
  String get name => toString().split('.')?.last?.replaceAll('DoT', '.');
  //
  static ApiOntapSvmLanguage fromName(String name) =>
      ApiOntapSvmLanguage.values.firstWhere(
        (v) => v.name == name,
        orElse: () => ApiOntapSvmLanguage.c,
      );
}
